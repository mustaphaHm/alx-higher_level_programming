The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``tests/0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

    >>> add_integer(0, 3)
    3
    >>> add_integer(1, 0)
    1
    >>> add_integer(0, 15.7)
    15
    >>> add_integer(-4, 4)
    0
    >>> add_integer(8, -8)
    0
    >>> add_integer(1)
    99
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'
    >>> add_integer('aaa', 'bbb')
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer('a', 2)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer('a')
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer(9, 'b')
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
